[project]
name = "wisdomgrade"
version = "0.1.0"
description = "The wisdomgrade project"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "alembic>=1.15.1",
    "arrow>=1.3.0",
    "fastapi[standard]>=0.115.11",
    "orjson>=3.10.15",
    "passlib>=1.7.4",
    "psycopg2-binary>=2.9.10",
    "psycopg[binary]>=3.2.6",
    "pydantic-extra-types>=2.10.0",
    "pydantic-settings>=2.6.1",
    "pydantic[email]>=2.9.2",
    "sqlalchemy-utils>=0.41.2",
    "sqlmodel>=0.0.24",
    "yarl>=1.18.3",
]

[tool.uv]
dev-dependencies = [
    "fastapi-cli>=0.0.5",
    "freezegun>=1.5.1",
    "mypy>=1.13.0",
    "pre-commit>=3.8.0",
    "pytest>=8.3.3",
    "pytest-asyncio>=0.24.0",
    "pytest-pretty>=1.2.0",
    "ruff>=0.6.7",
]

[tool.mypy]
plugins = ["pydantic.mypy", "sqlalchemy.ext.mypy.plugin"]
strict = true
exclude = ["venv", ".venv", "app/alembic"]

[tool.ruff]
src = ["app", "plugins", "tests"]
line-length = 120
exclude = ["alembic", "password"]

[tool.ruff.lint]
ignore = [
    "E501",
    "ANN401",
    "B008", # do not perform function calls in argument defaults
    "B904", # Allow raising exceptions without from e, for HTTPException
]
preview = true
explicit-preview-rules = true
extend-select = [
    "A", # flake8-builtins
    "B", # flake8-bugbear
    "C", # flake8-comprehensions
    "E", # pycodestyle errors
    "F", # pyflakes
    "I", # isort
    "UP", # pyupgrade
    "W", # pycodestyle warnings
    "G", # flake8-logging-format
    "N", # pep8-naming
    "Q", # flake8-quotes
    "S", # flake8-bandit
    "ANN", # flake8-annotations
    "ARG", # flake8-unused-arguments
    "BLE", # flake8-blind-except
    "DTZ", # flake8-datetimez
    "ICN", # flake8-import-conventions
    "INP", # flake8-no-pep420
    "LOG", # flake8-logging
    "PIE", # flake8-pie
    "PTH", # flake8-use-pathlib
    "RUF", # Ruff-specific rules
    "SIM", # flake8-simplify
    "T20", # flake8-print
    "TCH", # flake8-type-checking
    "SLOT", # flake8-slots
    # Preview rules
    "PLW1514", # unspecified-encoding
]

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401", "F403"]
"tests/**" = ["S101", "ARG001", "ARG002"]

[tool.ruff.lint.isort]
force-single-line = true

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q"
testpaths = [
    "tests"
]

[tool.typos.default.extend-words]
ser = "ser"

[tool.typos.files]
extend-exclude = [
    "graphql/*.graphql",
    "app/utils/password/password_digests.yaml",
]
